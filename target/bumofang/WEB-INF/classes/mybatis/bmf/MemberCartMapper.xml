<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberCartMapper">
	
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into MEMBER_CART(
			MEMBER_ID,
			PRODUCT_ID,
			TOTAL_NUM,
			PRICE,
			DELETED,
			OPTION_ID,
			CREATE_TIME,
			SELECTED,
			IS_BUY
		) values (
			#{MEMBER_ID},
			#{PRODUCT_ID},
			#{TOTAL_NUM},
			#{PRICE},
			#{DELETED},
			#{OPTION_ID},
			#{CREATE_TIME},
			#{SELECTED},
			#{IS_BUY}
		)
	</insert>
	
	<!-- 新增-->
	<insert id="save1" parameterType="pd">
		insert into MEMBER_CART(
			MEMBER_ID,
			PRODUCT_ID,
			TOTAL_NUM,
			use_for,
			PRICE,
			METER,
			DELETED,
			OPTION_ID,
			CREATE_TIME,
			SELECTED,
			IS_BUY
		) values (
			#{memter_id},
			#{product_id},
			#{total_num},
			#{use_for},
			#{price},
			#{meter},		
			#{deleted},
			#{option_id},
			#{create_time},
			#{selected},
			#{is_bug}
		)
	</insert>
	
	<!--<select id="allByMemberId" parameterType="pd" resultType="pd">-->
		<!--select -->
			<!--a.id, a.product_id, b.product_name, n.color_name, -->
			<!--b.pattern_picture1, -->
			<!--b.pattern_picture2, -->
			<!--b.quality_picture1,-->
            <!--b.quality_picture2, -->
            <!--b.quality_picture3, -->
            <!--b.quality_picture4, -->
            <!--c.craft_name, d.material_name, a.option_id, -->
            <!--a.price, a.total_num, a.meter, b.product_narrow_price, b.product_wide_price, b.product_component, -->
            <!--b.product_narrow_width, b.product_wide_width, b.pattern_horizontal_size, b.pattern_vertical_size, -->
            <!--b.product_source_area-->
		<!--from -->
			<!--member_cart a, product b, product_param_craft c, product_param_material d, product_record_color m,-->
			<!--product_param_color n-->
		<!--where -->
			<!--member_id = #{ID} and a.product_id = b.id and b.product_craft = c.id and b.product_material=d.id-->
			<!--and a.product_id = m.product_id and m.color_id = n.id and deleted = 0-->
		<!--order by-->
			<!--a.create_time desc-->
		<!--limit-->
			<!--#{startIndex},#{count}-->
	<!--</select>-->

	<select id="allByMemberId" parameterType="pd" resultType="pd">
	select a.id,a.use_for,a.product_id,b.product_name,
	CONCAT(b.product_name,'-Q2.jpg') as pattern_picture1,CONCAT(b.product_name,'-Q2.jpg') as pattern_picture2,CONCAT(b.product_name,'-Q2.jpg') as quality_picture1,
	CONCAT(b.product_name,'-Q2.jpg') as quality_picture2,CONCAT(b.product_name,'-Q2.jpg') as quality_picture3,CONCAT(b.product_name,'-Q2.jpg') as quality_picture4,
	a.option_id,a.price,a.total_num,a.meter,b.product_narrow_price,b.product_wide_price, b.product_component,
	b.product_narrow_width,b.product_wide_width,b.pattern_horizontal_size,b.pattern_vertical_size,b.product_source_area,
	group_concat(distinct c.craft_name) as craft_name,group_concat(distinct d.material_name) as material_name,group_concat(distinct n.color_name) as color_name,
	b.product_upload_time as productUploadTime
	from member_cart a
	inner join product b on a.product_id=b.id
	left join product_param_craft c on b.product_craft=c.id
	LEFT JOIN product_param_material d on b.product_material=d.id
	LEFT JOIN product_record_color m on a.product_id=m.product_id
	LEFT JOIN product_param_color n on m.color_id=n.id
	where a.member_id=#{ID} and a.deleted=0 and b.del_flag=0
	group by a.product_id
	order by a.create_time desc limit #{startIndex},#{count}
	</select>
	
	<select id="isProductId" parameterType="pd" resultType="pd">
		select * from member_cart where member_id = #{ID} and product_id = #{product_id} and deleted = 0
	</select>
	
	
	<!-- 修改 -->
	<update id="editById" parameterType="pd">
		update member_cart
		set
			meter = #{meter},
			option_id = #{option_id},
			price = #{price},
			use_for = #{use_for}
		where
			id = #{id}
	</update>


	
	
	<update id="updateByDelete" parameterType="pd">
	update member_cart
		set
			deleted = 1
		where
			id = #{ID}
	</update>
	
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		update MEMBER_CART
		set
			deleted = 1
		where 
			ID = #{ID}
	</delete>
	
	<!-- 批量删除-->
	<delete id="deleteAll" parameterType="String">
		update member_cart
		set
			deleted = 1
		where 
			id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>

	<select id="findByMemberId" parameterType="pd" resultType="pd">
		SELECT * FROM MEMBER_CART
		WHERE
		MEMBER_ID = #{MEMBER_ID} and deleted = 0
	</select>
	
	<select id="findById" parameterType="pd" resultType="pd">
		SELECT * FROM MEMBER_CART
		WHERE
		id = #{id}
	</select>
	
	<select id="findByIdWithProduct" parameterType="pd" resultType="pd">
		select * from member_cart a, product b where a.id = #{id} and a.product_id = b.id
	</select>

	<select id="deleteByParam" parameterType="pd" resultType="pd">
		UPDATE MEMBER_CART
		SET deleted = 1
		WHERE
		MEMBER_ID = #{MEMBER_ID} AND PRODUCT_ID = #{PRODUCT_ID}
	</select>

	<select id="deleteOldData" parameterType="pd" resultType="pd">
		UPDATE MEMBER_CART
		SET deleted = 1
		WHERE
		create_time &lt; date_add(now(),interval -30 day)
	</select>

</mapper>