<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProductRecordMatchSchemeMapper">
	<resultMap type="ProductRecordMatchScheme" id="productRecordMatchSchemeResultMap">
		<id column="id" property="id"/>
		<result column="product_id" property="productId"/>
		<result column="match_product_id" property="matchProductId"/>
		<result column="match_product_icon" property="matchProductIcon"/>
		<result column="create_user_id" property="createUserId"/>
		<result column="create_time" property="createTime"/>
	</resultMap>
	<resultMap type="ProductMatchSchemeItem" id="productMatchSchemeItemResultMap">
		<result column="match_product_id" property="matchProductId"/>
		<result column="match_product_name" property="matchProductName"/>
		<result column="match_product_icon" property="matchProductIcon"/>
		<result column="product_upload_time" property="productUploadTime"/>
		<result column="d3d_upload_time" property="d3dUploadTime"/>
	</resultMap>
	
	<!-- 新增-->
	<insert id="save" parameterType="ProductRecordMatchScheme" useGeneratedKeys="true" keyProperty="id">
		insert into product_record_match_scheme(
			product_id,
			match_product_id,
			match_product_icon,
			create_user_id,
			create_time
		) values (
			#{productId},
			#{matchProductId},
			#{matchProductIcon},
			#{createUserId},
			#{createTime}
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="java.lang.Long">
		delete from product_record_match_scheme
		where 
			id = #{value}
	</delete>

	<!-- 修改 -->
	<update id="edit" parameterType="ProductRecordMatchScheme">
		update product_record_match_scheme
			set 
			<if test="productId!=null">
				product_id = #{productId},
			</if>
			<if test="matchProductId!=null">
				match_product_id = #{matchProductId},
			</if>
			<if test="matchProductIcon!=null and matchProductIcon!=''">
				match_product_icon = #{matchProductIcon},
			</if>
			id = id
			where 
				id = #{id}
	</update>
	
	
	<!-- 通过id获取数据 -->
	<select id="findById" parameterType="java.lang.Long" resultMap="productRecordMatchSchemeResultMap">
		select * from 
			product_record_match_scheme
		where 
			id = #{value}
	</select>
	
	<!-- 修改 -->
	<select id="findByCondition" parameterType="ProductRecordMatchScheme" resultMap="productRecordMatchSchemeResultMap">
		select * from 
			product_record_match_scheme where 1=1
			<if test="createUserId!=null and createUserId!=''">
				and create_user_id = #{createUserId}
			</if>
			<if test="productId!=null">
				and product_id = #{productId}
			</if>
			<if test="matchProductId!=null">
				and match_product_id = #{matchProductId}
			</if>
			<if test="matchProductIcon!=null and matchProductIcon!=''">
				and match_product_icon = #{matchProductIcon}
			</if>
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultMap="productRecordMatchSchemeResultMap">
		select * from 
				product_record_match_scheme a where 1=1
		<if test="pd.query_time_start!=null and pd.query_time_start!=''"><!-- 时间检索 -->
			and a.create_time &gt;= #{pd.query_time_start}
		</if>
		<if test="pd.query_time_end!=null and pd.query_time_end!=''"><!-- 时间检索 -->
			and a.create_time &lt;= #{pd.query_time_end}
		</if>	
		<if test="pd.query_key!=null and pd.query_key!=''"><!-- 关键字检索 -->
			and a.name like concat('%',#{pd.query_key},'%')
		</if>
			order by a.create_time desc	
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="String" resultMap="productRecordMatchSchemeResultMap">
		select * from product_record_match_scheme a
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteBatch" parameterType="String">
		delete from product_record_match_scheme
		where 
			id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- 通过产品id获取对应的产品搭配方案 -->
	<!--<select id="findByProductId" parameterType="java.lang.Long" resultMap="productMatchSchemeItemResultMap">-->
		<!--select -->
			<!--a.match_product_id 'match_product_id' ,-->
			<!--b.quality_picture2 'match_product_icon',-->
			<!--b.product_name 'match_product_name'-->
		<!--from -->
			<!--product_record_match_scheme a-->
		<!--LEFT JOIN-->
			<!--product b-->
		<!--ON-->
			<!--b.id = a.match_product_id-->
		<!--where -->
			<!--a.product_id = #{value} and  b.del_flag = 0-->
	<!--</select>-->

	<!--质地途400*200 Q1 长方形-->
	<select id="findByProductId" parameterType="java.lang.Long" resultMap="productMatchSchemeItemResultMap">
		SELECT DISTINCT match_product_id, match_product_icon, match_product_name, product_upload_time, d3d_upload_time
		FROM
		(
		select
		rand() as idx,
		b.product_id 'match_product_id' ,
	    b.style_id,
		CONCAT(IFNULL(c.product_name, '') , '-Q1.jpg') 'match_product_icon',
		c.product_name 'match_product_name',
		c.product_upload_time,
		c.d3d_upload_time
		from
		product_record_style a
		LEFT JOIN
		product_record_style b
		ON
		b.style_id = a.style_id and b.product_id &lt;&gt; a.product_id
		LEFT JOIN
		product c
        on b.product_id = c.id
		where
		a.product_id = #{value} and  c.del_flag = 0
		order BY idx
		) data
		limit 0, 40
	</select>
	
		<!-- 删除某一个产品的搭配方案信息 -->
	<delete id="deleteProductMatchSheme" parameterType="java.lang.Long">
		delete from product_record_match_scheme
		where 
			product_id =#{productId}
	</delete>
</mapper>